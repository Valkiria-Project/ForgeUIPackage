# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  pull_request:
    branches: [ "main" ]
    types:
      - closed
    tags:
      - 'v*'

env:
  SCHEME: ForgeUIPackage
  TEST_DEVICE: platform=iOS Simulator,name=iPhone 14 Pro,OS=16.2

jobs:
  if_merged:
    if: github.event.pull_request.merged == true
    runs-on: macos-latest
    
    steps:
      - uses: actions/checkout@v3
      - uses: swift-actions/setup-swift@v1
      - name: Get Swift version
        run: swift --version
      - name: Show eligible build destinations for ForgeUIPackage
        run: xcodebuild -showdestinations -scheme '${{ env.SCHEME }}'

      - name: GitHub Tag Name example
        run: |
           echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
           echo "Tag name from github.ref_name: ${{ github.ref_name }}"

      - name: Create XCFramework
        uses: unsignedapps/swift-create-xcframework@v2.3.0

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./ForgeUIPackage.zip
          asset_name: ForgeUIPackage.zip
          asset_content_type: ForgeUIPackage/zip
